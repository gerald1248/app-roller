{{ if eq .Values.sample_deployment "true" }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  generation: 1
  labels:
    app: sample
  name: sample
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sample
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sample
    spec:
      containers:
      - image: gerald1248/app-roller:latest
        imagePullPolicy: Always
        name: app-roller
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        command: [ "sh", "-c", "while true; do sleep 60; done" ] 
        args: []
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        livenessProbe:
          exec:
            command:
            - date
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - date
          initialDelaySeconds: 10
          periodSeconds: 10
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
{{ end }}
